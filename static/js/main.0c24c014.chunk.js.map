{"version":3,"sources":["img/playerAvatar.png","img/AiAvatarMedium.png","img/AiAvatarEasy.png","img/AiAvatarHard.png","components/StartingPage.js","components/CategoryView.js","components/Category.js","utils/utils.js","components/QuestionView.js","components/Question.js","components/ResultsTable.js","components/Quiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FlexContainer","styled","div","_templateObject","props","column","Avatars","_templateObject2","Avatar","_templateObject3","playerAvatar","concat","aiAvatar","_ref","aiAvatarHover","Buttons","_templateObject4","Button","_templateObject5","small","StartingPage","react_default","a","createElement","map","level","onClick","changeAvatarAndDifficulty","onMouseEnter","hoverAvatarOn","onMouseLeave","hoverAvatarOff","startQuiz","CategoryView_templateObject","Header","h1","CategoryView_templateObject2","button","CategoryView_templateObject3","List","ul","CategoryView_templateObject4","ListItem","li","CategoryView_templateObject5","CategoryView","CategoryView_FlexContainer","categoriesList","item","CategoryView_Button","selectCategory","id","name","Category","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","dataLoaded","bind","assertThisInitialized","getRandomCategories","addSelectedCategory","newArr","length","randomItem","allCategories","Math","floor","random","includes","push","setState","components_CategoryView","Component","shuffle","arr","i","j","getAiAnswers","difficulty","array","num","QuestionView_templateObject","AnswersBar","QuestionView_templateObject2","AnswersBarItem","QuestionView_templateObject3","correct","wrong","QuestionView_templateObject4","Question","span","QuestionView_templateObject5","_templateObject6","_templateObject7","_templateObject8","isAnswerCorrect","answered","_ref2","_ref3","ClickInfo","_templateObject9","QuestionView","QuestionView_FlexContainer","continueQuiz","answersBarLength","selectedAnswersList","QuestionView_Header","question","category","replace","QuestionView_Question","QuestionView_List","answers","isQuestionAnswered","QuestionView_ListItem","QuestionView_Button","getSelectedAnswer","showCorrectAnswer","disabled","questionAnswered","currentQuestionNum","allQuestionsAnswered","getQuestionsData","getAnswersList","fetch","categoryID","res","json","data","results","objectSpread","decodeURIComponent","correct_answer","incorrect_answers","newDecodedData","questions","correctAnswer","selectedAnswer","console","log","_context","t0","answersList","toConsumableArray","err","event","answer","target","innerText","prevProps","prevState","getSelectedAnswers","components_QuestionView","undefined","ResultsTable_templateObject","ScoreContainer","ResultsTable_templateObject2","ResultsTable_templateObject3","Score","ResultsTable_templateObject4","Point","ResultsTable_templateObject5","ResultInfo","ResultsTable_templateObject6","QuizStateContainer","ResultsTable_templateObject7","QuizRow","ResultsTable_templateObject8","ResultsTable_templateObject9","_templateObject10","highlight","RoundInfo","_templateObject11","Round","_templateObject12","_templateObject13","_templateObject14","hide","Hidden","_templateObject15","ResultsTable","fake3ItemArray","answerBarPlaceholder","status","ResultsTable_AnswersBarItem","displayAnswers","ResultsTable_FlexContainer","ResultsTable_Avatar","score","roundNumber","roundStartedByAi","ResultsTable_AnswersBar","playerAnswers","ResultsTable_Category","categories","aiAnswers","ResultsTable_Button","startNewGame","Quiz","renderCategory","roundStartedByPlayer","renderScore","apiCategoriesList","selectedCategories","selectedAnswersByPlayer","selectedAnswersByAi","updateScore","filteredCategories","trivia_categories","filter","_this2","renderQuestion","aiCategory","setTimeout","renderScoreAi","AiAnswers","playerScore","reduce","arrayOne","arrayTwo","AiScore","components_Category","components_Question","components_ResultsTable","GlobalStyles","createGlobalStyle","App_templateObject","Wrapper","App_templateObject2","App","quizRunning","AiAvatarMedium","difficultyLevel","setAvatarByLevel","toLowerCase","avatar","AiAvatarEasy","AiAvatarHard","react","components_Quiz","components_StartingPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c24c014.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playerAvatar.20bf11e9.png\";","module.exports = __webpack_public_path__ + \"static/media/AiAvatarMedium.9034dfd6.png\";","module.exports = __webpack_public_path__ + \"static/media/AiAvatarEasy.2fbf31de.png\";","module.exports = __webpack_public_path__ + \"static/media/AiAvatarHard.b10822c8.png\";","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: ${props => (props.column ? 'column' : 'row')};\n  height: 100%;\n  padding: 2rem;\n`;\n\nconst Avatars = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 100%;\n`;\n\nconst Avatar = styled.div`\n  border: 2px solid #fff;\n  border-radius: 50%;\n  background-image: ${props =>\n    props.playerAvatar\n      ? `url(${props.playerAvatar})`\n      : `url(${props.aiAvatar})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  /* padding-bottom: 50%;\n  width: 50%; */\n  width: 35vw;\n  height: 35vw;\n  max-width: 16rem;\n  max-height: 16rem;\n\n  ${({ aiAvatarHover }) =>\n    aiAvatarHover &&\n    `\n    background-image: url(${aiAvatarHover})\n    `}\n`;\nconst Buttons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  position: relative;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  flex: ${props => (props.small ? '1 0 30%' : '1 0 100%')};\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  height: 8rem;\n  color: ${props => (props.small ? '#fff' : '#000')};\n  background-color: ${props => (props.small ? 'transaprent' : '#fff')};\n  margin-bottom: ${props => (props.small ? '2rem' : null)};\n  border-radius: 5px;\n  font-size: 2.5rem;\n  /* border: solid #4cff9d 4px; */\n  cursor: pointer;\n  transition: all 0.5s;\n\n  /* &:hover {\n    color: #000;\n    background-color: #fff;\n  } */\n\n  &:active {\n    font-size: 3.5rem;\n  }\n`;\n\nconst StartingPage = props => {\n  const levels = ['Easy', 'Medium', 'Hard'];\n  return (\n    <FlexContainer column>\n      <Avatars>\n        <Avatar playerAvatar={props.playerAvatar} />\n        <Avatar aiAvatar={props.aiAvatar} aiAvatarHover={props.aiAvatarHover} />\n      </Avatars>\n      <Buttons>\n        {levels.map(level => (\n          <Button\n            small\n            onClick={props.changeAvatarAndDifficulty}\n            onMouseEnter={props.hoverAvatarOn}\n            onMouseLeave={props.hoverAvatarOff}\n          >\n            {level}\n          </Button>\n        ))}\n        <Button onClick={props.startQuiz}>Start Game</Button>\n      </Buttons>\n    </FlexContainer>\n  );\n};\n\nexport default StartingPage;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem;\n  position: relative;\n`;\n\nconst Header = styled.h1`\n  font-size: 2rem;\n  position: absolute;\n  top: 2rem;\n  color: #fff;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  color: #fff;\n  font-size: 2.5rem;\n  font-family: 'Varela Round', sans-serif;\n  background: transparent;\n  cursor: pointer;\n  border: 2px solid #fff;\n  border-radius: 9rem;\n  padding: 2.5rem;\n  transition: all 0.5s;\n\n  &:hover {\n    color: rgb(8, 5, 23);\n    background: #fff;\n  }\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  width: 100%;\n`;\n\nconst ListItem = styled.li`\n  margin-bottom: 1.5rem;\n`;\n\nconst CategoryView = props => {\n  return (\n    <FlexContainer>\n      <Header>Select Category</Header>\n      <List>\n        {props.categoriesList.map(item => (\n          <ListItem>\n            <Button\n              onClick={() => {\n                props.selectCategory(item.id, item.name);\n              }}\n            >\n              {item.name}\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </FlexContainer>\n  );\n};\n\nexport default CategoryView;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport CategoryView from './CategoryView';\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataLoaded: false,\n      categoriesList: null,\n    };\n\n    this.selectCategory = this.selectCategory.bind(this);\n    this.getRandomCategories = this.getRandomCategories.bind(this);\n  }\n\n  selectCategory(id, name) {\n    this.props.addSelectedCategory(id, name);\n  }\n\n  getRandomCategories() {\n    const newArr = [];\n    while (newArr.length < 3) {\n      const randomItem = this.props.allCategories[\n        Math.floor(Math.random() * this.props.allCategories.length)\n      ];\n      if (newArr.includes(randomItem) === false) {\n        newArr.push(randomItem);\n      }\n    }\n    this.setState({ categoriesList: newArr, dataLoaded: true });\n  }\n\n  componentDidMount() {\n    if (this.state.categoriesList === null) {\n      this.getRandomCategories();\n    }\n  }\n\n  render() {\n    return (\n      this.state.dataLoaded && (\n        <CategoryView\n          selectCategory={this.selectCategory}\n          categoriesList={this.state.categoriesList}\n        />\n      )\n    );\n  }\n}\n\nexport default Category;\n","// ES6 Fisher–Yates shuffle algorithm\n\nexport function shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\nexport function getAiAnswers(difficulty) {\n  const easy = 70;\n  const medium = 80;\n  const hard = 90;\n\n  const array = [];\n\n  for (let i = 0; i < 3; i++) {\n    const num = Math.random() * 100;\n    if (difficulty === 'easy') {\n      num < easy ? array.push(true) : array.push(false);\n    }\n\n    if (difficulty === 'medium') {\n      num < medium ? array.push(true) : array.push(false);\n    }\n\n    if (difficulty === 'hard') {\n      num < hard ? array.push(true) : array.push(false);\n    }\n  }\n  return array;\n}\n\nexport function getAiCategory(arr) {\n  const randomItem = arr[Math.floor(Math.random() * arr.length)];\n  return randomItem;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem 2rem 6rem 2rem;\n  position: relative;\n`;\n\nconst AnswersBar = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  width: 100%;\n  position: absolute;\n  top: 1.5rem;\n`;\n\nconst AnswersBarItem = styled.li`\n  background-color: ${props =>\n    (props.correct && '#4cff9d') ||\n    (props.wrong && '#ff4545') ||\n    'rgba(255, 255, 255, 0.08)'};\n  width: 4rem;\n  height: 5px;\n  border-radius: 2rem;\n  margin-right: 5px;\n`;\n\nconst Header = styled.h1`\n  font-size: 2rem;\n  color: #fff;\n  margin-top: 1rem;\n`;\n\nconst Question = styled.span`\n  font-family: 'Dosis', sans-serif;\n  font-size: 3.5rem;\n  color: #fff;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  width: 100%;\n`;\n\nconst ListItem = styled.li`\n  flex: 1 0 45%;\n  padding: 5px;\n`;\n\n// rgba(255, 255, 255, 0.08);\n// rgba(0, 0, 0, 0.51);\n\nconst Button = styled.button`\n  background-color: ${({ isAnswerCorrect, answered }) =>\n    (isAnswerCorrect === 'answerCorrect' && '#4cff9d') ||\n    (isAnswerCorrect === 'answerWrongShowCorrect' && '#534f63') ||\n    (isAnswerCorrect === 'answerWrong' && '#ff4545') ||\n    (answered && 'rgba(255, 255, 255, 0.08)') ||\n    '#fff'};\n  width: 100%;\n  color: ${({ isAnswerCorrect, answered }) =>\n    (isAnswerCorrect === 'answerCorrect' && '#000') ||\n    (isAnswerCorrect === 'answerWrongShowCorrect' && '#fff') ||\n    (isAnswerCorrect === 'answerWrong' && '#fff') ||\n    (answered && 'rgba(0, 0, 0, 0.51)') ||\n    '#000'};\n  font-size: 2rem;\n  font-family: 'Varela Round', sans-serif;\n  cursor: pointer;\n  border: ${({ isAnswerCorrect }) =>\n    (isAnswerCorrect === 'answerWrongShowCorrect' && 'solid #4cff9d 4px') ||\n    'none'};\n  border-radius: 5px;\n  height: 11.5rem;\n  cursor: pointer;\n`;\n\nconst ClickInfo = styled.span`\n  position: absolute;\n  color: rgba(255, 255, 255, 0.58);\n  bottom: 2rem;\n  font-size: 2rem;\n\n  ::after {\n    content: '';\n    position: absolute;\n    top: 53%;\n    width: 8%;\n    right: -2rem;\n    border-bottom: 2px solid rgba(255, 255, 255, 0.58);\n  }\n\n  ::before {\n    content: '';\n    position: absolute;\n    top: 53%;\n    width: 8%;\n    left: -2rem;\n    border-bottom: 2px solid rgba(255, 255, 255, 0.58);\n  }\n`;\n\nconst QuestionView = props => {\n  return (\n    <FlexContainer onClick={props.continueQuiz}>\n      <AnswersBar>\n        {props.answersBarLength.map((item, i) => {\n          if (props.selectedAnswersList[i] === true) {\n            return <AnswersBarItem correct />;\n          }\n          if (props.selectedAnswersList[i] === false) {\n            return <AnswersBarItem wrong />;\n          } else return <AnswersBarItem />;\n        })}\n      </AnswersBar>\n      <Header>\n        {\n          (props.question.category = props.question.category.replace(\n            /Entertainment: |Science: /g,\n            ''\n          ))\n        }\n      </Header>\n      <Question>{props.question.question}</Question>\n      <List>\n        {props.answers.map(item => {\n          if (!props.isQuestionAnswered) {\n            return (\n              <ListItem>\n                <Button onClick={props.getSelectedAnswer}>{item}</Button>\n              </ListItem>\n            );\n          } else {\n            return (\n              <ListItem>\n                <Button\n                  onClick={props.getSelectedAnswer}\n                  isAnswerCorrect={props.showCorrectAnswer(item)}\n                  answered\n                  disabled\n                >\n                  {item}\n                </Button>\n              </ListItem>\n            );\n          }\n        })}\n      </List>\n      {props.isQuestionAnswered && <ClickInfo>Tap to continue</ClickInfo>}\n    </FlexContainer>\n  );\n};\n\nexport default QuestionView;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { shuffle } from '../utils/utils';\nimport QuestionView from './QuestionView';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataLoaded: false,\n      questionAnswered: false,\n      currentQuestionNum: 1,\n      selectedAnswersList: [],\n      allQuestionsAnswered: false,\n    };\n\n    this.getQuestionsData = this.getQuestionsData.bind(this);\n    this.getAnswersList = this.getAnswersList.bind(this);\n    this.getSelectedAnswer = this.getSelectedAnswer.bind(this);\n    this.showCorrectAnswer = this.showCorrectAnswer.bind(this);\n    this.continueQuiz = this.continueQuiz.bind(this);\n  }\n\n  async getQuestionsData() {\n    try {\n      const res = await fetch(\n        `https://opentdb.com/api.php?amount=3&category=${\n          this.props.categoryID\n        }&difficulty=${this.props.difficulty}&type=multiple&encode=url3986`\n      );\n      const data = await res.json();\n\n      // https://medium.com/front-end-weekly/immutability-in-array-of-objects-using-map-method-dd61584c7188\n      const newDecodedData = await data.results.map(item => {\n        item = {\n          ...item,\n          question: decodeURIComponent(item.question),\n          category: decodeURIComponent(item.category),\n          correct_answer: decodeURIComponent(item.correct_answer),\n          incorrect_answers: item.incorrect_answers.map(i =>\n            decodeURIComponent(i)\n          ),\n        };\n        return item;\n      });\n      await this.setState({\n        questions: newDecodedData,\n        correctAnswer:\n          newDecodedData[this.state.currentQuestionNum - 1].correct_answer,\n        selectedAnswer: null,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async componentDidMount() {\n    await this.getQuestionsData();\n    await this.getAnswersList();\n    await this.setState({\n      dataLoaded: true,\n    });\n  }\n\n  async getAnswersList() {\n    try {\n      const answersList = [\n        this.state.questions[this.state.currentQuestionNum - 1].correct_answer,\n        ...this.state.questions[this.state.currentQuestionNum - 1]\n          .incorrect_answers,\n      ];\n      this.setState({ answers: shuffle(answersList) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  getSelectedAnswer(event) {\n    const answer = event.target.innerText;\n    let isAnswerCorrect;\n    if (answer === this.state.correctAnswer) {\n      isAnswerCorrect = true;\n    } else {\n      isAnswerCorrect = false;\n    }\n    this.setState({\n      selectedAnswer: answer,\n      questionAnswered: true,\n      selectedAnswersList: [...this.state.selectedAnswersList, isAnswerCorrect],\n    });\n  }\n\n  showCorrectAnswer(item) {\n    if (this.state.questionAnswered) {\n      if (this.state.correctAnswer !== this.state.selectedAnswer) {\n        if (item === this.state.selectedAnswer) {\n          return 'answerWrong';\n        }\n        if (item === this.state.correctAnswer) {\n          return 'answerWrongShowCorrect';\n        }\n      }\n      if (this.state.correctAnswer === item) {\n        return 'answerCorrect';\n      }\n    }\n  }\n\n  async continueQuiz() {\n    if (this.state.currentQuestionNum < 3) {\n      await this.setState({\n        questionAnswered: false,\n        currentQuestionNum: this.state.currentQuestionNum + 1,\n        correctAnswer: this.state.questions[this.state.currentQuestionNum]\n          .correct_answer,\n      });\n      await this.getAnswersList();\n    }\n    if (\n      this.state.currentQuestionNum === 3 &&\n      this.state.questionAnswered === true\n    ) {\n      this.setState({\n        allQuestionsAnswered: true,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.allQuestionsAnswered !== this.state.allQuestionsAnswered) {\n      this.props.getSelectedAnswers(this.state.selectedAnswersList);\n    }\n  }\n\n  render() {\n    return (\n      this.state.dataLoaded && (\n        <QuestionView\n          question={this.state.questions[this.state.currentQuestionNum - 1]}\n          answers={this.state.answers}\n          getSelectedAnswer={this.getSelectedAnswer}\n          showCorrectAnswer={this.showCorrectAnswer}\n          selectedAnswersList={this.state.selectedAnswersList}\n          answersBarLength={this.state.questions}\n          isQuestionAnswered={this.state.questionAnswered}\n          continueQuiz={\n            this.state.questionAnswered ? this.continueQuiz : undefined\n          }\n        />\n      )\n    );\n  }\n}\n\nexport default Question;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem;\n`;\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst Avatar = styled.div`\n  border: 2px solid #fff;\n  border-radius: 50%;\n  background-image: ${props =>\n    props.playerAvatar\n      ? `url(${props.playerAvatar})`\n      : `url(${props.aiAvatar})`};\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 35vw;\n  height: 35vw;\n  max-width: 13rem;\n  max-height: 13rem;\n`;\n\nconst Score = styled.div`\n  font-size: 4rem;\n  color: #fff;\n`;\n\nconst Point = styled.span`\n  color: #fff;\n  font-size: 4rem;\n  padding: 0.5rem;\n`;\n\nconst ResultInfo = styled.div`\n  color: #fff;\n  font-size: 4.5rem;\n  font-family: 'Varela Round', sans-serif;\n  opacity: 1;\n`;\n\nconst QuizStateContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst QuizRow = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst AnswersBar = styled.ul`\n  display: flex;\n  justify-content: center;\n  list-style: none;\n  width: 100%;\n  position: relative;\n`;\n\nconst AnswersBarItem = styled.li`\n  background-color: ${props =>\n    (props.correct && '#4cff9d') ||\n    (props.wrong && '#ff4545') ||\n    (props.highlight && 'rgba(255,255,255,0.58)') ||\n    'rgba(255, 255, 255, 0.08)'};\n  width: 4rem;\n  height: 5px;\n  border-radius: 2rem;\n  margin-right: 5px;\n`;\n\nconst RoundInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  color: ${props => (props.highlight ? '#fff' : 'rgba(158, 158, 158, 0.56)')};\n  height: 7rem;\n  width: 80%;\n`;\n\nconst Round = styled.span`\n  font-size: 2rem;\n`;\nconst Category = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  height: 5rem;\n  font-size: 2.5rem;\n  color: #fff;\n  background-color: #ff4545;\n  border: none;\n  border-radius: 1rem;\n  cursor: pointer;\n  opacity: ${props => (props.hide ? '0' : null)};\n`;\n\nconst Hidden = styled.span`\n  position: absolute;\n  top: -2.2rem;\n  text-align: center;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n  color: rgba(255, 255, 255, 0.58);\n`;\n\nconst ResultsTable = props => {\n  const round = [1, 2, 3, 4, 5];\n  const fake3ItemArray = [1, 2, 3];\n\n  const answerBarPlaceholder = status => {\n    if (status === 'highlight') {\n      return fake3ItemArray.map(item => <AnswersBarItem highlight />);\n    } else return fake3ItemArray.map(item => <AnswersBarItem />);\n  };\n\n  const pointsAi = () => {\n    if (props.roundStartedByAi) {\n      return props.score[1];\n    } else {\n      return props.score[1] - 3;\n    }\n  };\n\n  const displayAnswers = answer => {\n    if (answer) {\n      return <AnswersBarItem correct />;\n    }\n    if (answer === false) {\n      return <AnswersBarItem wrong />;\n    } else return <AnswersBarItem />;\n  };\n\n  const showResult = () => {\n    if (props.score[0] > props.score[1]) {\n      return 'You Won!';\n    }\n    if (props.score[0] < props.score[1]) {\n      return 'You Lose!';\n    } else return 'Draw!';\n  };\n\n  return (\n    <FlexContainer>\n      <ScoreContainer>\n        <Avatar playerAvatar={props.playerAvatar} />\n        <Score>\n          <Point>{props.score[0]}</Point>\n          <span>-</span>\n          <Point>{props.roundNumber > 1 ? pointsAi() : 0}</Point>\n        </Score>\n        <Avatar aiAvatar={props.aiAvatar} />\n      </ScoreContainer>\n      {props.roundNumber > 5 && <ResultInfo>{showResult()}</ResultInfo>}\n      <QuizStateContainer>\n        {round.map(item => (\n          <QuizRow>\n            <AnswersBar>\n              {item <= props.roundNumber ? (\n                props.playerAnswers[item - 1] ? (\n                  props.playerAnswers[item - 1].map(displayAnswers)\n                ) : (\n                  <AnswersBar>{answerBarPlaceholder()}</AnswersBar>\n                )\n              ) : (\n                <AnswersBar>{answerBarPlaceholder()}</AnswersBar>\n              )}\n            </AnswersBar>\n            {item <= props.roundNumber ? (\n              <RoundInfo highlight={item === props.roundNumber ? true : null}>\n                <Round>Round {item}</Round>\n                <Category>{props.categories[item - 1][1]}</Category>\n              </RoundInfo>\n            ) : (\n              <RoundInfo>\n                <Round>Round {item}</Round>\n                <Category />\n              </RoundInfo>\n            )}\n            <AnswersBar>\n              {item === props.roundNumber ? (\n                props.roundStartedByAi ? (\n                  <AnswersBar>\n                    <Hidden>hidden</Hidden>\n                    {answerBarPlaceholder('highlight')}\n                  </AnswersBar>\n                ) : (\n                  <AnswersBar>{answerBarPlaceholder('highlight')}</AnswersBar>\n                )\n              ) : item <= props.roundNumber - 1 ? (\n                props.aiAnswers[item - 1].map(displayAnswers)\n              ) : (\n                answerBarPlaceholder()\n              )}\n            </AnswersBar>\n          </QuizRow>\n        ))}\n      </QuizStateContainer>\n      {props.roundStartedByAi ? (\n        <Button\n          onClick={\n            props.roundNumber > 5 ? props.startNewGame : props.continueQuiz\n          }\n        >\n          {props.roundNumber > 5 ? 'Start New Game!' : 'Click to Continue!'}\n        </Button>\n      ) : (\n        <Button hide disabled>\n          hidden\n        </Button>\n      )}\n    </FlexContainer>\n  );\n};\n\nexport default ResultsTable;\n","import React, { Component } from 'react';\nimport Category from './Category';\nimport Question from './Question';\nimport ResultsTable from './ResultsTable';\nimport { getAiAnswers, getAiCategory } from '../utils/utils';\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataLoaded: false,\n      renderCategory: true,\n      roundStartedByPlayer: true,\n      roundNumber: 1,\n      renderScore: false,\n      apiCategoriesList: null,\n      selectedCategories: [],\n      score: [0, 0],\n      selectedAnswersByPlayer: [],\n      selectedAnswersByAi: [],\n    };\n\n    this.addSelectedCategory = this.addSelectedCategory.bind(this);\n    this.getSelectedAnswers = this.getSelectedAnswers.bind(this);\n    this.continueQuiz = this.continueQuiz.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n    this.startNewGame = this.startNewGame.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.state.apiCategoriesList === null) {\n      try {\n        const res = await fetch('https://opentdb.com/api_category.php');\n        const data = await res.json();\n\n        // Remove anime & Manga category\n        const filteredCategories = data.trivia_categories.filter(item => {\n          if (item.id !== 31) {\n            item.name = item.name.replace(/Entertainment: |Science: /g, '');\n            return item;\n          }\n        });\n        this.setState({\n          apiCategoriesList: filteredCategories,\n          dataLoaded: true,\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  addSelectedCategory(id, name) {\n    this.setState({\n      selectedCategories: [...this.state.selectedCategories, [id, name]],\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.roundStartedByPlayer) {\n      if (prevState.selectedCategories !== this.state.selectedCategories) {\n        this.setState({\n          renderCategory: false,\n          renderQuestion: true,\n        });\n      }\n      if (\n        prevState.selectedAnswersByPlayer !== this.state.selectedAnswersByPlayer\n      ) {\n        const aiAnswers = getAiAnswers(this.props.difficulty);\n        this.setState({\n          selectedAnswersByAi: [...this.state.selectedAnswersByAi, aiAnswers],\n          renderScore: true,\n          renderQuestion: false,\n        });\n      }\n      if (prevState.renderScore !== this.state.renderScore) {\n        const aiAnswers = getAiAnswers(this.props.difficulty);\n        const aiCategory = getAiCategory(this.state.apiCategoriesList);\n        setTimeout(() => {\n          this.setState({\n            selectedAnswersByAi: [...this.state.selectedAnswersByAi, aiAnswers],\n            selectedCategories: [\n              ...this.state.selectedCategories,\n              [aiCategory.id, aiCategory.name],\n            ],\n            roundStartedByPlayer: false,\n            roundNumber: this.state.roundNumber + 1,\n            renderScore: false,\n            renderScoreAi: true,\n          });\n        }, 1500);\n      }\n    }\n    if (this.state.roundStartedByPlayer === false) {\n      if (\n        prevState.selectedAnswersByPlayer !== this.state.selectedAnswersByPlayer\n      ) {\n        this.setState({\n          roundStartedByPlayer: true,\n          roundNumber: this.state.roundNumber + 1,\n          renderCategory: true,\n        });\n      }\n    }\n    if (\n      prevState.selectedAnswersByPlayer !==\n        this.state.selectedAnswersByPlayer ||\n      (prevState.selectedAnswersByAi !== this.state.selectedAnswersByAi &&\n        this.state.roundStartedByPlayer)\n    ) {\n      this.updateScore(\n        this.state.selectedAnswersByPlayer,\n        this.state.selectedAnswersByAi\n      );\n    }\n  }\n\n  getSelectedAnswers(answers) {\n    this.setState({\n      selectedAnswersByPlayer: [...this.state.selectedAnswersByPlayer, answers],\n    });\n  }\n\n  updateScore(playerAnswers, AiAnswers) {\n    const playerScore = playerAnswers\n      .reduce((arrayOne, arrayTwo) => {\n        return arrayOne.concat(arrayTwo);\n      }, [])\n      .filter(item => item === true);\n    const AiScore = AiAnswers.reduce((arrayOne, arrayTwo) => {\n      return arrayOne.concat(arrayTwo);\n    }, []).filter(item => item === true);\n    this.setState({\n      score: [playerScore.length, AiScore.length],\n    });\n  }\n\n  continueQuiz() {\n    this.setState({\n      roundStartedByPlayer: false,\n      renderQuestion: true,\n    });\n  }\n\n  startNewGame() {\n    this.props.startNewGame();\n  }\n\n  render() {\n    if (this.state.dataLoaded) {\n      if (this.state.roundStartedByPlayer) {\n        if (this.state.renderCategory)\n          return (\n            <Category\n              addSelectedCategory={this.addSelectedCategory}\n              allCategories={this.state.apiCategoriesList}\n            />\n          );\n        if (this.state.renderQuestion) {\n          return (\n            <Question\n              getSelectedAnswers={this.getSelectedAnswers}\n              categoryID={\n                this.state.selectedCategories[this.state.roundNumber - 1][0]\n              }\n              difficulty={this.props.difficulty}\n            />\n          );\n        }\n      }\n      if (this.state.roundStartedByPlayer === false) {\n        if (this.state.renderQuestion) {\n          return (\n            <Question\n              getSelectedAnswers={this.getSelectedAnswers}\n              categoryID={\n                this.state.selectedCategories[this.state.roundNumber - 1][0]\n              }\n              difficulty={this.props.difficulty}\n            />\n          );\n        }\n      }\n      if (\n        (this.state.roundStartedByPlayer === false &&\n          this.state.renderScoreAi) ||\n        (this.state.roundStartedByPlayer && this.state.renderScore)\n      ) {\n        return (\n          <ResultsTable\n            playerAvatar={this.props.playerAvatar}\n            aiAvatar={this.props.aiAvatar}\n            categories={this.state.selectedCategories}\n            score={this.state.score}\n            roundNumber={this.state.roundNumber}\n            continueQuiz={this.continueQuiz}\n            startNewGame={this.startNewGame}\n            playerAnswers={this.state.selectedAnswersByPlayer}\n            aiAnswers={this.state.selectedAnswersByAi}\n            roundStartedByPlayer={this.state.roundStartedByPlayer ? true : null}\n            roundStartedByAi={this.state.roundStartedByPlayer ? null : true}\n          />\n        );\n      }\n    }\n    return null;\n  }\n}\n\nexport default Quiz;\n","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\nimport StartingPage from './components/StartingPage';\nimport Quiz from './components/Quiz';\nimport playerAvatar from './img/playerAvatar.png';\nimport AiAvatarEasy from './img/AiAvatarEasy.png';\nimport AiAvatarMedium from './img/AiAvatarMedium.png';\nimport AiAvatarHard from './img/AiAvatarHard.png';\n\nimport './App.css';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n\n    @media (max-width: 600px) {\n      font-size: 50%; /* 1rem = 8px */\n    }\n  }\n\n  body {\n    background: linear-gradient(45deg, rgba(81,49,207,1) 0%, rgba(252,70,165,1) 100%);\n\n}\n\n\n  }\n\n  #root {\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n    margin: 0;\n    padding: 0;\n  }\n\n`;\n\nconst Wrapper = styled.div`\n  width: 46.5rem;\n  height: 100%;\n  height: 88.5rem;\n  background: linear-gradient(\n    180deg,\n    rgb(63, 51, 128) 10%,\n    rgba(18, 15, 24, 1) 64%\n  );\n\n  @media (max-width: 500px) {\n    height: 100vh;\n    width: 100%;\n  }\n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quizRunning: false,\n      aiAvatar: AiAvatarMedium,\n      aiAvatarHover: null,\n      difficultyLevel: 'medium',\n    };\n\n    this.startQuiz = this.startQuiz.bind(this);\n    this.changeAvatarAndDifficulty = this.changeAvatarAndDifficulty.bind(this);\n    this.hoverAvatarOn = this.hoverAvatarOn.bind(this);\n    this.hoverAvatarOff = this.hoverAvatarOff.bind(this);\n    this.startNewGame = this.startNewGame.bind(this);\n    this.setAvatarByLevel = this.setAvatarByLevel.bind(this);\n  }\n\n  startQuiz() {\n    this.setState({\n      quizRunning: true,\n    });\n  }\n\n  startNewGame() {\n    this.setState({\n      quizRunning: false,\n    });\n  }\n\n  changeAvatarAndDifficulty(event) {\n    const difficulty = event.target.innerText.toLowerCase();\n    let avatar = this.setAvatarByLevel(event);\n    this.setState({\n      aiAvatar: avatar,\n      difficultyLevel: difficulty,\n    });\n  }\n\n  hoverAvatarOn(event) {\n    let avatar = this.setAvatarByLevel(event);\n    this.setState({\n      aiAvatarHover: avatar,\n    });\n  }\n\n  hoverAvatarOff() {\n    this.setState({\n      aiAvatarHover: this.state.aiAvatar,\n    });\n  }\n\n  // https://stackoverflow.com/questions/912596/how-to-turn-a-string-into-a-javascript-function-call\n  setAvatarByLevel(event) {\n    const targetLevel = event.target.innerText;\n    let avatar;\n    switch (targetLevel) {\n      case 'Easy':\n        avatar = AiAvatarEasy;\n        break;\n      case 'Medium':\n        avatar = AiAvatarMedium;\n        break;\n      case 'Hard':\n        avatar = AiAvatarHard;\n        break;\n      default:\n        console.log('error');\n    }\n    return avatar;\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <GlobalStyles />\n        <Wrapper>\n          {this.state.quizRunning ? (\n            <Quiz\n              playerAvatar={playerAvatar}\n              aiAvatar={this.state.aiAvatar}\n              difficulty={this.state.difficultyLevel}\n              startNewGame={this.startNewGame}\n            />\n          ) : (\n            <StartingPage\n              startQuiz={this.startQuiz}\n              playerAvatar={playerAvatar}\n              aiAvatar={this.state.aiAvatar}\n              aiAvatarHover={this.state.aiAvatarHover}\n              changeAvatarAndDifficulty={this.changeAvatarAndDifficulty}\n              hoverAvatarOn={this.hoverAvatarOn}\n              hoverAvatarOff={this.hoverAvatarOff}\n            />\n          )}\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}